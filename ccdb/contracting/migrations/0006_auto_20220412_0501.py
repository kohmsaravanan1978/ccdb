# Generated by Django 3.2.12 on 2022-04-12 03:01

import contracting.models.contract_item
import django.core.validators
import django.db.models.deletion
import django_extensions.db.fields
import globalways.models.globalways_tool
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contracting", "0005_auto_20220322_1957"),
    ]

    operations = [
        migrations.CreateModel(
            name="BookingAccount",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("SEPA", "SEPA direct debit"),
                            ("INVOICE", "Invoice"),
                            ("NONE", "No data (historic import)"),
                        ],
                        default="SEPA",
                        max_length=7,
                        verbose_name="Account type",
                    ),
                ),
                (
                    "invoice_delivery",
                    models.CharField(
                        choices=[
                            ("NONE", "no delivery"),
                            ("EMAIL", "via mail"),
                            ("POST", "via post"),
                        ],
                        default="EMAIL",
                        max_length=10,
                        verbose_name="invoice delivery",
                    ),
                ),
                (
                    "payment_term",
                    models.PositiveIntegerField(
                        default=14, help_text="In days", verbose_name="Payment term"
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        choices=[("19", "19"), ("0", "0")],
                        decimal_places=1,
                        default="19",
                        max_digits=4,
                        verbose_name="Tax rate",
                    ),
                ),
                (
                    "tax_option",
                    models.CharField(
                        choices=[
                            ("NULL", "Normal steuerbar"),
                            ("nStb", "Nicht steuerbar (Drittland)"),
                            ("nStbUstID", "Nicht steuerbar (EU mit USt-IdNr.)"),
                            ("nStbNoneUstId", "Nicht steuerbar (EU ohne USt-IdNr.)"),
                            ("nStbIm", "Nicht steuerbarer Innenumsatz"),
                            ("recv", "Steuerschuldwechsel ยง13b (Inland)"),
                            ("IG", "Innergemeinschaftliche Lieferung"),
                            ("AL", "Ausfuhrlieferung"),
                            ("sStfr", "sonstige Steuerbefreiung"),
                            ("small", "Kleinunternehmen (Keine MwSt.)"),
                        ],
                        default="NULL",
                        max_length=13,
                        verbose_name="Tax options",
                    ),
                ),
                (
                    "address_email",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_company",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_street",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_suffix",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_city",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_zip_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "address_country",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("vat_id", models.CharField(blank=True, max_length=32, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracting_bookingaccount_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.CreateModel(
            name="BookingAccountSepa",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "confirmed",
                    models.DateField(
                        blank=True, null=True, verbose_name="confirmed on"
                    ),
                ),
                (
                    "revoked",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="revoked on"
                    ),
                ),
                ("first_used", models.DateTimeField(blank=True, null=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("account_owner", models.CharField(max_length=150)),
                ("bank_name", models.CharField(max_length=64)),
                ("bic", models.CharField(max_length=11)),
                ("iban", models.CharField(max_length=34)),
                ("reference", models.CharField(max_length=35)),
                ("address_street", models.CharField(max_length=150)),
                ("address_zip_code", models.CharField(max_length=20)),
                ("address_city", models.CharField(max_length=100)),
                ("address_country", models.CharField(default="DE", max_length=2)),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sepa",
                        to="contracting.bookingaccount",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracting_bookingaccountsepa_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracting_bookingaccountsepa_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "number",
                    models.PositiveIntegerField(
                        unique=True, verbose_name="customer number"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracting_customer_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracting_customer_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBookingAccount",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("SEPA", "SEPA direct debit"),
                            ("INVOICE", "Invoice"),
                            ("NONE", "No data (historic import)"),
                        ],
                        default="SEPA",
                        max_length=7,
                        verbose_name="Account type",
                    ),
                ),
                (
                    "invoice_delivery",
                    models.CharField(
                        choices=[
                            ("NONE", "no delivery"),
                            ("EMAIL", "via mail"),
                            ("POST", "via post"),
                        ],
                        default="EMAIL",
                        max_length=10,
                        verbose_name="invoice delivery",
                    ),
                ),
                (
                    "payment_term",
                    models.PositiveIntegerField(
                        default=14, help_text="In days", verbose_name="Payment term"
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        choices=[("19", "19"), ("0", "0")],
                        decimal_places=1,
                        default="19",
                        max_digits=4,
                        verbose_name="Tax rate",
                    ),
                ),
                (
                    "tax_option",
                    models.CharField(
                        choices=[
                            ("NULL", "Normal steuerbar"),
                            ("nStb", "Nicht steuerbar (Drittland)"),
                            ("nStbUstID", "Nicht steuerbar (EU mit USt-IdNr.)"),
                            ("nStbNoneUstId", "Nicht steuerbar (EU ohne USt-IdNr.)"),
                            ("nStbIm", "Nicht steuerbarer Innenumsatz"),
                            ("recv", "Steuerschuldwechsel ยง13b (Inland)"),
                            ("IG", "Innergemeinschaftliche Lieferung"),
                            ("AL", "Ausfuhrlieferung"),
                            ("sStfr", "sonstige Steuerbefreiung"),
                            ("small", "Kleinunternehmen (Keine MwSt.)"),
                        ],
                        default="NULL",
                        max_length=13,
                        verbose_name="Tax options",
                    ),
                ),
                (
                    "address_email",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_company",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_street",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_suffix",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_city",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "address_zip_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "address_country",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("vat_id", models.CharField(blank=True, max_length=32, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracting.customer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical booking account",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBookingAccountSepa",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "confirmed",
                    models.DateField(
                        blank=True, null=True, verbose_name="confirmed on"
                    ),
                ),
                (
                    "revoked",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="revoked on"
                    ),
                ),
                ("first_used", models.DateTimeField(blank=True, null=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("account_owner", models.CharField(max_length=150)),
                ("bank_name", models.CharField(max_length=64)),
                ("bic", models.CharField(max_length=11)),
                ("iban", models.CharField(max_length=34)),
                ("reference", models.CharField(max_length=35)),
                ("address_street", models.CharField(max_length=150)),
                ("address_zip_code", models.CharField(max_length=20)),
                ("address_city", models.CharField(max_length=100)),
                ("address_country", models.CharField(default="DE", max_length=2)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracting.bookingaccount",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical booking account sepa",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCustomer",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "number",
                    models.PositiveIntegerField(
                        db_index=True, verbose_name="customer number"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical customer",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="InvoiceItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField()),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=3,
                        default=1,
                        max_digits=15,
                        verbose_name="Invoice line amount",
                    ),
                ),
                (
                    "price_single_net",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="single item amount (net)",
                    ),
                ),
                (
                    "price_total_net",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="total amount (net)",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        choices=[("19", "19"), ("0", "0")],
                        decimal_places=1,
                        default="19",
                        max_digits=4,
                        verbose_name="Tax rate",
                    ),
                ),
                ("billing_start", models.DateField()),
                ("billing_end", models.DateField()),
            ],
            options={
                "ordering": ("invoice", "order"),
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("number", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "total_net",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="total amount (net)",
                    ),
                ),
                (
                    "total_gross",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=15,
                        null=True,
                        verbose_name="total amount (net)",
                    ),
                ),
                ("canceled", models.BooleanField(default=False)),
                ("date", models.DateField()),
                ("billing_data", models.JSONField(default=dict)),
                (
                    "booking_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transactions",
                        to="contracting.bookingaccount",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracting_transaction_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracting_transaction_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("date",),
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.RemoveField(
            model_name="historicalcontractclient",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="historicalcontractclient",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicalcontractclient",
            name="modified_by",
        ),
        migrations.AlterModelOptions(
            name="contract",
            options={
                "base_manager_name": "objects",
                "ordering": ("number",),
                "verbose_name": "contract",
                "verbose_name_plural": "contracts",
            },
        ),
        migrations.AlterModelOptions(
            name="contractitem",
            options={
                "base_manager_name": "objects",
                "ordering": ("number",),
                "verbose_name": "contract_item_singular",
                "verbose_name_plural": "contract_item_plural",
            },
        ),
        migrations.RenameField(
            model_name="contract",
            old_name="contract_number",
            new_name="number",
        ),
        migrations.RenameField(
            model_name="historicalcontract",
            old_name="contract_number",
            new_name="number",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="accounting_enabled",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="accounting_period",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="client",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="customer_number",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="customer_reference",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="fullfillment_datacenter",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="invoice_delivery",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="is_realized",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="salesforce_record",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="sepa_enabled",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="status",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="billing_typ",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="contract_item_type",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="cost_center",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="customer_description",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="description",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="included_power",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="is_realized",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="kpi_kva",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="kpi_kwh",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="kpi_sqm",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="kpi_type",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="name",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="net_price",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="position_id",
        ),
        migrations.RemoveField(
            model_name="contractitem",
            name="salesforce_record",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="accounting_enabled",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="accounting_period",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="client",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="customer_number",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="customer_reference",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="fullfillment_datacenter",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="invoice_delivery",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="is_realized",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="salesforce_record",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="sepa_enabled",
        ),
        migrations.RemoveField(
            model_name="historicalcontract",
            name="status",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="billing_typ",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="contract_item_type",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="cost_center",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="customer_description",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="description",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="included_power",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="is_realized",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="kpi_kva",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="kpi_kwh",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="kpi_sqm",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="kpi_type",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="name",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="net_price",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="position_id",
        ),
        migrations.RemoveField(
            model_name="historicalcontractitem",
            name="salesforce_record",
        ),
        migrations.AddField(
            model_name="contract",
            name="contract_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="contract reference"
            ),
        ),
        migrations.AddField(
            model_name="contract",
            name="imported_data",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AddField(
            model_name="contract",
            name="jira_offer_reference",
            field=models.CharField(
                blank=True,
                max_length=300,
                null=True,
                verbose_name="Jira offer reference",
            ),
        ),
        migrations.AddField(
            model_name="contract",
            name="jira_ticket",
            field=models.CharField(
                blank=True, max_length=300, null=True, verbose_name="Jira ticket"
            ),
        ),
        migrations.AddField(
            model_name="contract",
            name="order_date",
            field=models.DateField(blank=True, null=True, verbose_name="order date"),
        ),
        migrations.AddField(
            model_name="contract",
            name="order_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="order reference"
            ),
        ),
        migrations.AddField(
            model_name="contract",
            name="ready_for_service",
            field=models.CharField(
                blank=True,
                help_text="Link to the Ready for Service document",
                max_length=300,
                null=True,
                verbose_name="Ready for Service",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="accounting_period",
            field=models.PositiveIntegerField(
                default=1,
                validators=[
                    contracting.models.contract_item.validate_accounting_periods
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="contractitem",
            name="archived",
            field=models.BooleanField(
                default=False,
                help_text="Used to ignore old imported items",
                verbose_name="archived",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="billing_type",
            field=models.CharField(
                choices=[
                    ("once", "One-off payment"),
                    ("recurring", "Recurring payments"),
                ],
                default="recurring",
                max_length=9,
                verbose_name="Billing type",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="fibu_account",
            field=models.PositiveIntegerField(
                blank=True, null=True, verbose_name="FiBu account"
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="imported_data",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="location",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="Location"
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="minimum_duration",
            field=models.PositiveIntegerField(
                default=1,
                help_text="Minimum duration in months",
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="minimum contract duration",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="netbox_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="NetBox reference"
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="next_invoice",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="notice_period",
            field=models.PositiveIntegerField(default=3, verbose_name="notice period"),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="number",
            field=models.IntegerField(
                default=1, unique=True, verbose_name="contract item number"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="contractitem",
            name="order",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="order_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="order reference"
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="paused",
            field=models.BooleanField(default=False, verbose_name="paused"),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="predecessor",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="successor",
                to="contracting.contractitem",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="price_recurring",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=None,
                max_digits=15,
                null=True,
                verbose_name="Recurring price (net)",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="price_setup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=None,
                max_digits=15,
                null=True,
                verbose_name="Setup price (net)",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="product_code",
            field=models.CharField(
                default=1, max_length=50, verbose_name="product code"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="contractitem",
            name="product_description",
            field=models.TextField(
                blank=True, null=True, verbose_name="product description"
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="product_name",
            field=models.CharField(
                default=1, max_length=200, verbose_name="product name"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="contractitem",
            name="ready_for_service",
            field=models.CharField(
                blank=True,
                help_text="Link to the Ready for Service document",
                max_length=300,
                null=True,
                verbose_name="Ready for Service",
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="realization_variant",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="termination_date",
            field=models.DateField(
                blank=True, null=True, verbose_name="termination date"
            ),
        ),
        migrations.AddField(
            model_name="gwcbsvertrag",
            name="imported",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="gwcbs",
                to="contracting.contract",
            ),
        ),
        migrations.AddField(
            model_name="gwcbsvertragposten",
            name="imported",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="gwcbs",
                to="contracting.contractitem",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="contract_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="contract reference"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="imported_data",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="jira_offer_reference",
            field=models.CharField(
                blank=True,
                max_length=300,
                null=True,
                verbose_name="Jira offer reference",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="jira_ticket",
            field=models.CharField(
                blank=True, max_length=300, null=True, verbose_name="Jira ticket"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="order_date",
            field=models.DateField(blank=True, null=True, verbose_name="order date"),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="order_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="order reference"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="ready_for_service",
            field=models.CharField(
                blank=True,
                help_text="Link to the Ready for Service document",
                max_length=300,
                null=True,
                verbose_name="Ready for Service",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="accounting_period",
            field=models.PositiveIntegerField(
                default=1,
                validators=[
                    contracting.models.contract_item.validate_accounting_periods
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="archived",
            field=models.BooleanField(
                default=False,
                help_text="Used to ignore old imported items",
                verbose_name="archived",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="billing_type",
            field=models.CharField(
                choices=[
                    ("once", "One-off payment"),
                    ("recurring", "Recurring payments"),
                ],
                default="recurring",
                max_length=9,
                verbose_name="Billing type",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="fibu_account",
            field=models.PositiveIntegerField(
                blank=True, null=True, verbose_name="FiBu account"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="imported_data",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="location",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="Location"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="minimum_duration",
            field=models.PositiveIntegerField(
                default=1,
                help_text="Minimum duration in months",
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="minimum contract duration",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="netbox_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="NetBox reference"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="next_invoice",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="notice_period",
            field=models.PositiveIntegerField(default=3, verbose_name="notice period"),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="number",
            field=models.IntegerField(
                db_index=True, default=1, verbose_name="contract item number"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="order",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="order_reference",
            field=models.CharField(
                blank=True, max_length=200, null=True, verbose_name="order reference"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="paused",
            field=models.BooleanField(default=False, verbose_name="paused"),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="predecessor",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="contracting.contractitem",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="price_recurring",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=None,
                max_digits=15,
                null=True,
                verbose_name="Recurring price (net)",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="price_setup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=None,
                max_digits=15,
                null=True,
                verbose_name="Setup price (net)",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="product_code",
            field=models.CharField(
                default=1, max_length=50, verbose_name="product code"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="product_description",
            field=models.TextField(
                blank=True, null=True, verbose_name="product description"
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="product_name",
            field=models.CharField(
                default=1, max_length=200, verbose_name="product name"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="ready_for_service",
            field=models.CharField(
                blank=True,
                help_text="Link to the Ready for Service document",
                max_length=300,
                null=True,
                verbose_name="Ready for Service",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="realization_variant",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="historicalcontractitem",
            name="termination_date",
            field=models.DateField(
                blank=True, null=True, verbose_name="termination date"
            ),
        ),
        migrations.AlterField(
            model_name="contract",
            name="billing_data",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AlterField(
            model_name="contract",
            name="collective_invoice",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="contract",
            name="comment",
            field=models.TextField(blank=True, null=True, verbose_name="comment"),
        ),
        migrations.AlterField(
            model_name="contract",
            name="minimum_duration",
            field=models.PositiveIntegerField(
                default=1,
                help_text="Minimum duration in months",
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="minimum contract duration",
            ),
        ),
        migrations.AlterField(
            model_name="contractitem",
            name="contract",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="items",
                to="contracting.contract",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcontract",
            name="billing_data",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AlterField(
            model_name="historicalcontract",
            name="collective_invoice",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="historicalcontract",
            name="comment",
            field=models.TextField(blank=True, null=True, verbose_name="comment"),
        ),
        migrations.AlterField(
            model_name="historicalcontract",
            name="minimum_duration",
            field=models.PositiveIntegerField(
                default=1,
                help_text="Minimum duration in months",
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="minimum contract duration",
            ),
        ),
        migrations.CreateModel(
            name="CreditMemo",
            fields=[
                (
                    "transaction_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="contracting.transaction",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("contracting.transaction",),
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "transaction_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="contracting.transaction",
                    ),
                ),
                ("billing_start", models.DateField()),
                ("billing_end", models.DateField()),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("draft", "draft"),
                            ("pending", "pending"),
                            ("synced", "synced"),
                        ],
                        default="draft",
                        max_length=7,
                    ),
                ),
                ("approved", models.BooleanField(default=True)),
                (
                    "sepa_transaction_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FRST", "first SEPA transaction"),
                            ("RCUR", "recurring SEPA transaction"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("contracting.transaction",),
        ),
        migrations.DeleteModel(
            name="ContractClient",
        ),
        migrations.DeleteModel(
            name="HistoricalContractClient",
        ),
        migrations.AddField(
            model_name="invoiceitem",
            name="contract_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="invoice_items",
                to="contracting.contractitem",
            ),
        ),
        migrations.AddField(
            model_name="invoiceitem",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="contracting_invoiceitem_created_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="invoiceitem",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="contracting_invoiceitem_modified_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="bookingaccount",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="booking_accounts",
                to="contracting.customer",
            ),
        ),
        migrations.AddField(
            model_name="bookingaccount",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="contracting_bookingaccount_modified_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="contract",
            name="booking_account",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="contracts",
                to="contracting.bookingaccount",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="gwcbsbuchungskonto",
            name="imported",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="gwcbs",
                to="contracting.bookingaccount",
            ),
        ),
        migrations.AddField(
            model_name="gwcbsrechnungenpositionen",
            name="imported",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="gwcbs",
                to="contracting.invoiceitem",
            ),
        ),
        migrations.AddField(
            model_name="historicalcontract",
            name="booking_account",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="contracting.bookingaccount",
            ),
        ),
        migrations.AddField(
            model_name="invoiceitem",
            name="invoice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="items",
                to="contracting.invoice",
            ),
        ),
        migrations.AddField(
            model_name="gwcbsrechnungen",
            name="imported",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="gwcbs",
                to="contracting.invoice",
            ),
        ),
    ]
