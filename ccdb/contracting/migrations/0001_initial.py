# Generated by Django 3.2.12 on 2022-03-02 13:42

import contracting.models.contract
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import globalways.models.globalways_tool
import model_utils.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "customer_number",
                    models.IntegerField(verbose_name="customer number"),
                ),
                (
                    "contract_number",
                    models.IntegerField(unique=True, verbose_name="contract number"),
                ),
                (
                    "customer_reference",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        verbose_name="customer reference",
                    ),
                ),
                ("valid_from", models.DateField(verbose_name="valid from")),
                (
                    "valid_till",
                    models.DateField(blank=True, null=True, verbose_name="valid till"),
                ),
                (
                    "minimum_duration",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="minimum contract duration",
                    ),
                ),
                (
                    "notice_period",
                    models.PositiveIntegerField(
                        default=3, verbose_name="notice period"
                    ),
                ),
                (
                    "automatic_extension",
                    models.PositiveIntegerField(
                        default=12, verbose_name="automatic extension"
                    ),
                ),
                (
                    "termination_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="termination date"
                    ),
                ),
                (
                    "accounting_period",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="accounting period",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, default="", verbose_name="comment"),
                ),
                (
                    "sepa_enabled",
                    models.BooleanField(default=False, verbose_name="sepa enabled"),
                ),
                (
                    "collective_invoice",
                    models.BooleanField(
                        default=True, verbose_name="collective invoice"
                    ),
                ),
                (
                    "is_realized",
                    models.BooleanField(default=False, verbose_name="is realized"),
                ),
                (
                    "accounting_enabled",
                    models.BooleanField(
                        default=False, verbose_name="accounting enabled"
                    ),
                ),
                (
                    "invoice_delivery",
                    models.CharField(
                        blank=True,
                        choices=[
                            [None, "no delivery"],
                            ["EMAIL", "via mail"],
                            ["POST", "via post"],
                        ],
                        default="EMAIL",
                        max_length=10,
                        null=True,
                        verbose_name="invoice delivery",
                    ),
                ),
                ("billing_data", models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                "verbose_name": "contract",
                "verbose_name_plural": "contracts",
                "ordering": ("contract_number",),
                "base_manager_name": "objects",
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.CreateModel(
            name="ContractClient",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("easybill_instance_identifier", models.CharField(max_length=100)),
                (
                    "easybill_invoice_template",
                    models.CharField(default="DE", max_length=100),
                ),
                (
                    "easybill_sepa_invoice_template",
                    models.CharField(default="DE", max_length=100),
                ),
                ("easybill_sepa_creditor_identifier", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "contract client",
                "verbose_name_plural": "contract clients",
                "ordering": ("name",),
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.CreateModel(
            name="ContractItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("valid_from", models.DateField(blank=True, null=True)),
                ("valid_till", models.DateField(blank=True, null=True)),
                ("description", models.TextField(blank=True, default="")),
                ("customer_description", models.TextField(blank=True, default="")),
                (
                    "contract_item_type",
                    models.IntegerField(
                        choices=[
                            [3, "once"],
                            [1, "recuring_fixed"],
                            [2, "recuring_variable"],
                            [9, "unknown"],
                        ],
                        verbose_name="contract_item_type",
                    ),
                ),
                ("cost_center", models.IntegerField(default=0)),
                (
                    "net_price",
                    models.DecimalField(
                        decimal_places=7,
                        default=0,
                        max_digits=15,
                        verbose_name="net_price",
                    ),
                ),
                (
                    "is_realized",
                    models.BooleanField(default=True, verbose_name="is realized"),
                ),
                ("included_power", models.BigIntegerField(default=0)),
                ("billing_typ", models.CharField(blank=True, max_length=20, null=True)),
                ("billing_data", models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                "verbose_name": "contract_item_singular",
                "verbose_name_plural": "contract_item_plural",
                "ordering": ("name",),
                "base_manager_name": "objects",
            },
            bases=(globalways.models.globalways_tool.GlobalwaysTool, models.Model),
        ),
        migrations.CreateModel(
            name="GwAamLieferschein",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GwAamLieferscheinPosten",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vorlage_id", models.PositiveIntegerField(null=True)),
                ("reihenfolge", models.PositiveIntegerField(null=True)),
                ("typ", models.CharField(blank=True, max_length=255, null=True)),
                ("von", models.DateField(null=True)),
                ("bis", models.DateField(null=True)),
                ("anzahl", models.FloatField()),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("beschreibung", models.TextField()),
                ("optionen", models.CharField(blank=True, max_length=255, null=True)),
                ("preis", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="GwAamVorgang",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("firma", models.PositiveIntegerField(null=True)),
                ("deleted", models.DateTimeField(null=True)),
                ("status", models.IntegerField()),
                ("buchungskontoId", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsBuchungskonto",
            fields=[
                (
                    "buchungskontoid",
                    models.AutoField(
                        db_column="buchungskontoId", primary_key=True, serialize=False
                    ),
                ),
                ("kundeid", models.PositiveIntegerField(db_column="kundeId")),
                ("active", models.CharField(max_length=1)),
                ("kontostand", models.FloatField()),
                ("zahlungsart", models.CharField(max_length=13)),
                ("zahlungsfrist", models.IntegerField()),
                ("mwst", models.CharField(max_length=1)),
                ("ust_id_nr", models.CharField(blank=True, max_length=32, null=True)),
                ("ueberweisungsfrist", models.IntegerField()),
                (
                    "gwkonto_dtaus_path",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("bemerkung", models.TextField(blank=True, null=True)),
                ("faelligkeitstyp", models.CharField(max_length=1)),
                ("old_gwkonto_id", models.PositiveIntegerField()),
                ("iban_elv_konto", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "field_elv_vorhanden",
                    models.IntegerField(db_column="_elv_vorhanden"),
                ),
                (
                    "ebics_account",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("source_id", models.PositiveIntegerField(blank=True, null=True)),
                ("creditor_id", models.CharField(blank=True, max_length=32, null=True)),
                (
                    "invoice_approval_by",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsBuchungskontoKonto",
            fields=[
                (
                    "kontoid",
                    models.AutoField(
                        db_column="kontoId", primary_key=True, serialize=False
                    ),
                ),
                ("inhaber", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "kreditinstitut",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("blz", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "kontonummer",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("geloescht", models.CharField(max_length=1)),
                ("notizen", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsBuchungskontoTransaktionen",
            fields=[
                (
                    "transaktionid",
                    models.AutoField(
                        db_column="transaktionId", primary_key=True, serialize=False
                    ),
                ),
                (
                    "buchungskontoid",
                    models.PositiveIntegerField(db_column="buchungskontoId"),
                ),
                ("betrag", models.FloatField()),
                ("bezahlt", models.FloatField()),
                ("art", models.CharField(max_length=5)),
                (
                    "sepa_transaction_type",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("datum_erstellt", models.DateTimeField()),
                ("datum_buchungstag", models.DateField()),
                ("datum_wertstellung", models.DateTimeField()),
                ("verwendungszweck", models.CharField(max_length=255)),
                ("datum_dtaus", models.DateTimeField(blank=True, null=True)),
                ("datum_rueckbuchung", models.DateTimeField(blank=True, null=True)),
                ("tracking_id", models.CharField(max_length=16)),
                (
                    "ebics_transaction_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ebics_payment_id",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "ebics_statuscode",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "ebics_statusreasoncode",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("bezahlt_tmp", models.FloatField(db_column="bezahlt_TMP")),
                ("hbcilog", models.TextField()),
                ("sepa1810dup", models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsCreditmemos",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(null=True)),
                ("modified", models.DateTimeField(null=True)),
                (
                    "created_user_id",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                (
                    "modified_user_id",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                ("credit_invoice_item_id", models.IntegerField(null=True)),
                ("debit_invoice_item_id", models.IntegerField(null=True)),
                ("billing_not_before", models.DateField(null=True)),
                ("approved", models.DateTimeField(null=True)),
                (
                    "approved_user_id",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                ("ticket_id", models.IntegerField(null=True)),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("von", models.DateField(db_column="from", null=True)),
                ("bis", models.DateField(db_column="to", null=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("amount", models.FloatField()),
                ("price", models.FloatField()),
                ("reason", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsRechnungen",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("kundeid", models.IntegerField()),
                ("state_id", models.IntegerField()),
                ("datum", models.DateTimeField(null=True)),
                ("zahlungsziel", models.DateField(null=True)),
                ("betrag", models.FloatField()),
                ("mwst", models.FloatField()),
                ("delivery_id", models.PositiveIntegerField(blank=True, null=True)),
                ("gw_pdf_id", models.PositiveIntegerField(blank=True, null=True)),
                ("storniert", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsRechnungenPositionen",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(null=True)),
                ("typ", models.CharField(blank=True, max_length=255, null=True)),
                ("von", models.DateField(null=True)),
                ("bis", models.DateField(null=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("beschreibung", models.TextField()),
                ("anzahl", models.FloatField()),
                ("preis", models.FloatField()),
                (
                    "referenztyp",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("referenz", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsVertrag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("parent_id", models.PositiveIntegerField(blank=True, null=True)),
                ("firma", models.PositiveIntegerField()),
                ("projekt", models.CharField(max_length=16)),
                (
                    "created_user_id",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                (
                    "modified_user_id",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                (
                    "midwife_user_id",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                (
                    "provision_customer_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("ticket_id", models.PositiveIntegerField(blank=True, null=True)),
                ("vname", models.CharField(max_length=100)),
                ("kommentar", models.TextField()),
                (
                    "kunden_referenz_nummer",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("erstellt", models.DateTimeField(blank=True, null=True)),
                ("beginn", models.DateField(blank=True, null=True)),
                ("letzte_rechnung", models.DateField(blank=True, null=True)),
                ("letzte_aenderung", models.DateTimeField(blank=True, null=True)),
                ("ende", models.DateField(blank=True, null=True)),
                ("ausgelaufen", models.IntegerField()),
                (
                    "ausgelaufen_ticket_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("naechste_rechnung", models.DateField(blank=True, null=True)),
                ("frist", models.DateField(blank=True, null=True)),
                ("rechnungsintervall", models.IntegerField()),
                ("kuend_frist", models.IntegerField()),
                ("beginn_laufzeit", models.PositiveIntegerField()),
                ("verlaengerung", models.IntegerField()),
                ("rechnungsintervall_anpassung", models.PositiveIntegerField()),
                ("rechnungsende_anpassung", models.PositiveIntegerField()),
                ("zuletzt_gedruckt", models.DateField(null=True)),
                ("unterzeichnet", models.IntegerField(null=True)),
                ("unterzeichnet_am", models.DateField(null=True)),
                ("gekuendigt", models.IntegerField(null=True)),
                ("gekuendigt_am", models.DateTimeField(null=True)),
                (
                    "gekuendigt_ticket_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "gekuendigt_kundenticket_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("anlagen", models.CharField(max_length=255)),
                ("t_vertrag_name", models.CharField(max_length=255)),
                ("t_vertrag_beschr", models.CharField(max_length=255)),
                ("t_postenbez", models.CharField(max_length=255)),
                (
                    "gw_iz_privileges_realm_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("freigeschalten", models.IntegerField()),
                ("freigeschalten_am", models.DateTimeField(blank=True, null=True)),
                ("suspended", models.PositiveIntegerField()),
                (
                    "suspended_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("einzelrechnung", models.PositiveIntegerField()),
                (
                    "alte_vertragsnummer_gwag",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsVertragPosten",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.PositiveIntegerField()),
                ("vorlageid", models.IntegerField()),
                ("reihenfolge", models.IntegerField()),
                ("typ", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=60)),
                ("beschreibung", models.TextField()),
                ("preis", models.FloatField()),
                (
                    "gw_dsl_public_ippool_ip",
                    models.CharField(blank=True, max_length=15, null=True, unique=True),
                ),
                (
                    "gw_dsl_public_subnetpool_net",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("freitraffic", models.PositiveIntegerField()),
                ("abgerechnet", models.CharField(max_length=1)),
                (
                    "abgerechnetam",
                    models.DateField(blank=True, db_column="abgerechnetAm", null=True),
                ),
                ("subnet_size", models.PositiveIntegerField()),
                ("vpn_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "gw_ppp_accounts_id",
                    models.PositiveIntegerField(blank=True, null=True, unique=True),
                ),
                (
                    "gw_ip_subnets_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("gw_nodes_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "field_sparte_id",
                    models.PositiveIntegerField(
                        blank=True, db_column="_sparte_id", null=True
                    ),
                ),
                (
                    "tixi_device_id",
                    models.PositiveIntegerField(blank=True, null=True, unique=True),
                ),
                (
                    "tixi_anpassungsposition_eeg2014",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "cs_building_id",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "easybill_product_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsVertragPostenEasybillprodukte",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=255)),
                ("cost_price", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "export_cost1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "export_cost2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "export_identifier",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "export_identifier_extended",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("group_id", models.CharField(blank=True, max_length=255, null=True)),
                ("login_id", models.CharField(blank=True, max_length=255, null=True)),
                ("note", models.CharField(blank=True, max_length=255, null=True)),
                ("price_type", models.CharField(blank=True, max_length=255, null=True)),
                ("quantity", models.CharField(blank=True, max_length=255, null=True)),
                ("sale_price", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "sale_price2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price3",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price4",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price5",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price6",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price7",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price8",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price9",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sale_price10",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("stock", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "stock_count",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stock_limit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stock_limit_notify",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("unit", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "vat_percent",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GwCbsVertragPostenSparten",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(blank=True, null=True)),
                ("fibu_konto", models.IntegerField()),
                ("gruppe", models.CharField(max_length=64)),
                ("name", models.CharField(max_length=255)),
                ("color", models.CharField(max_length=8)),
                (
                    "midwife_user_id",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GwZustellung",
            fields=[
                (
                    "zustellungid",
                    models.AutoField(
                        db_column="zustellungId", primary_key=True, serialize=False
                    ),
                ),
                ("zustellung_email", models.CharField(max_length=1)),
                ("zustellung_post", models.CharField(max_length=1)),
                ("zustellung_per_hand", models.CharField(max_length=1)),
                ("zustellung_email_an", models.CharField(max_length=255)),
                ("zustellung_post_an", models.TextField()),
                ("zustellung_per_hand_an", models.CharField(max_length=255)),
                ("zugestellt_email_am", models.DateTimeField(blank=True, null=True)),
                ("zugestellt_post_am", models.DateTimeField(blank=True, null=True)),
                ("zugestellt_per_hand_am", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalContract",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "customer_number",
                    models.IntegerField(verbose_name="customer number"),
                ),
                (
                    "contract_number",
                    models.IntegerField(db_index=True, verbose_name="contract number"),
                ),
                (
                    "customer_reference",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        verbose_name="customer reference",
                    ),
                ),
                ("valid_from", models.DateField(verbose_name="valid from")),
                (
                    "valid_till",
                    models.DateField(blank=True, null=True, verbose_name="valid till"),
                ),
                (
                    "minimum_duration",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="minimum contract duration",
                    ),
                ),
                (
                    "notice_period",
                    models.PositiveIntegerField(
                        default=3, verbose_name="notice period"
                    ),
                ),
                (
                    "automatic_extension",
                    models.PositiveIntegerField(
                        default=12, verbose_name="automatic extension"
                    ),
                ),
                (
                    "termination_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="termination date"
                    ),
                ),
                (
                    "accounting_period",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="accounting period",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, default="", verbose_name="comment"),
                ),
                (
                    "sepa_enabled",
                    models.BooleanField(default=False, verbose_name="sepa enabled"),
                ),
                (
                    "collective_invoice",
                    models.BooleanField(
                        default=True, verbose_name="collective invoice"
                    ),
                ),
                (
                    "is_realized",
                    models.BooleanField(default=False, verbose_name="is realized"),
                ),
                (
                    "accounting_enabled",
                    models.BooleanField(
                        default=False, verbose_name="accounting enabled"
                    ),
                ),
                (
                    "invoice_delivery",
                    models.CharField(
                        blank=True,
                        choices=[
                            [None, "no delivery"],
                            ["EMAIL", "via mail"],
                            ["POST", "via post"],
                        ],
                        default="EMAIL",
                        max_length=10,
                        null=True,
                        verbose_name="invoice delivery",
                    ),
                ),
                ("billing_data", models.JSONField(blank=True, default=dict, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical contract",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContractClient",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("easybill_instance_identifier", models.CharField(max_length=100)),
                (
                    "easybill_invoice_template",
                    models.CharField(default="DE", max_length=100),
                ),
                (
                    "easybill_sepa_invoice_template",
                    models.CharField(default="DE", max_length=100),
                ),
                ("easybill_sepa_creditor_identifier", models.CharField(max_length=100)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical contract client",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="GwCbsBuchungskontoSepaelv",
            fields=[
                (
                    "buchungskonto",
                    models.OneToOneField(
                        db_column="buchungskonto_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        serialize=False,
                        to="contracting.gwcbsbuchungskonto",
                    ),
                ),
                ("created", models.DateTimeField()),
                ("modified", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.DateTimeField(blank=True, null=True)),
                ("requested", models.DateTimeField(blank=True, null=True)),
                (
                    "request_document_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("confirmed", models.DateTimeField(blank=True, null=True)),
                (
                    "confirm_document_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("revoked", models.DateTimeField(blank=True, null=True)),
                (
                    "revoke_document_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("first_used", models.DateTimeField(blank=True, null=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("mandatstyp", models.CharField(max_length=6)),
                ("mandatsreferenz", models.CharField(max_length=35)),
                ("kreditinstitut", models.CharField(max_length=64)),
                ("bic", models.CharField(max_length=11)),
                ("iban", models.CharField(max_length=34)),
                ("kontoinhaber", models.CharField(max_length=150)),
                ("anschrift", models.CharField(max_length=150)),
                ("plz", models.CharField(max_length=20)),
                ("ort", models.CharField(max_length=100)),
                ("bundesland", models.CharField(max_length=100)),
                ("land", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalContractItem",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("valid_from", models.DateField(blank=True, null=True)),
                ("valid_till", models.DateField(blank=True, null=True)),
                ("description", models.TextField(blank=True, default="")),
                ("customer_description", models.TextField(blank=True, default="")),
                (
                    "contract_item_type",
                    models.IntegerField(
                        choices=[
                            [3, "once"],
                            [1, "recuring_fixed"],
                            [2, "recuring_variable"],
                            [9, "unknown"],
                        ],
                        verbose_name="contract_item_type",
                    ),
                ),
                ("cost_center", models.IntegerField(default=0)),
                (
                    "net_price",
                    models.DecimalField(
                        decimal_places=7,
                        default=0,
                        max_digits=15,
                        verbose_name="net_price",
                    ),
                ),
                (
                    "is_realized",
                    models.BooleanField(default=True, verbose_name="is realized"),
                ),
                ("included_power", models.BigIntegerField(default=0)),
                ("billing_typ", models.CharField(blank=True, max_length=20, null=True)),
                ("billing_data", models.JSONField(blank=True, default=dict, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracting.contract",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical contract_item_singular",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
